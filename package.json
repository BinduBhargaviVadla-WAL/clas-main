{
  "name": "cypress-lawn-hmis",
  "productName": "HMISAPP",
  "version": "0.0.7",
  "description": "HMISapp Desktop Application",
  "scripts": {
    "build": "concurrently \"yarn build-main\" \"yarn build-renderer\"",
    "build-dev": "concurrently \"yarn build-main-dev\" \"yarn build-renderer-dev\"",
    "build-preprod": "concurrently \"yarn build-main-preprod\" \"yarn build-renderer-preprod\"",
    "build-qa": "concurrently \"yarn build-main-qa\" \"yarn build-renderer-qa\"",
    "build-uat": "concurrently \"yarn build-main-uat\" \"yarn build-renderer-uat\"",
    "build-dll": "cross-env NODE_ENV=development webpack --config ./configs/webpack.config.renderer.dev.dll.babel.js --colors",
    "build-e2e": "cross-env E2E_BUILD=true yarn build",
    "build-main": "cross-env NODE_ENV=production webpack --config ./configs/webpack.config.main.prod.babel.js --colors",
    "build-main-dev": "cross-env NODE_ENV=dev webpack --config ./configs/webpack.config.main.prod.babel.js --colors",
    "build-main-preprod": "cross-env NODE_ENV=preprod webpack --config ./configs/webpack.config.main.prod.babel.js --colors",
    "build-main-qa": "cross-env NODE_ENV=qa webpack --config ./configs/webpack.config.main.prod.babel.js --colors",
    "build-main-uat": "cross-env NODE_ENV=uat webpack --config ./configs/webpack.config.main.prod.babel.js --colors",
    "build-renderer": "cross-env NODE_ENV=production webpack --config ./configs/webpack.config.renderer.prod.babel.js --colors",
    "build-renderer-dev": "cross-env NODE_ENV=dev webpack --config ./configs/webpack.config.renderer.prod.babel.js --colors",
    "build-renderer-preprod": "cross-env NODE_ENV=preprod webpack --config ./configs/webpack.config.renderer.prod.babel.js --colors",
    "build-renderer-qa": "cross-env NODE_ENV=qa webpack --config ./configs/webpack.config.renderer.prod.babel.js --colors",
    "build-renderer-uat": "cross-env NODE_ENV=uat webpack --config ./configs/webpack.config.renderer.prod.babel.js --colors",
    "dev": "cross-env START_HOT=1 node -r @babel/register ./internals/scripts/CheckPortInUse.js && cross-env START_HOT=1 yarn start-renderer-dev",
    "electron-rebuild": "electron-rebuild --parallel --force --types prod,dev,optional --module-dir app",
    "lint": "cross-env NODE_ENV=development eslint --cache --format=pretty .",
    "lint-fix": "yarn --silent lint --fix; exit 0",
    "lint-styles": "stylelint --ignore-path .eslintignore '**/*.*(css|scss)' --syntax scss",
    "lint-styles-fix": "yarn --silent lint-styles --fix; exit 0",
    "package": "yarn build && electron-builder build --publish never",
    "package-mac-dev": "yarn build-dev && electron-builder build --publish never --mac",
    "package-mac-qa": "yarn build-qa && electron-builder build --publish never --mac",
    "package-mac-uat": "yarn build-uat && electron-builder build --publish never --mac",
    "package-all": "yarn build && electron-builder build -mwl",
    "package-ci": "yarn postinstall && yarn build && electron-builder --publish always",
    "package-linux": "yarn build && electron-builder build --linux",
    "package-linux-dev": "yarn build-dev && electron-builder build --linux",
    "package-linux-qa": "yarn build-qa && electron-builder build --linux",
    "package-linux-uat": "yarn build-uat && electron-builder build --linux",
    "package-win": "yarn build && electron-builder build --win --x64 --publish always",
    "package-win-preprod": "yarn build-preprod && electron-builder build --win --x64",
    "package-win-dev": "yarn build-dev && electron-builder build --win --x64",
    "package-win-qa": "yarn build-qa && electron-builder build --win --x64",
    "package-win-uat": "yarn build-uat && electron-builder build --win --x64",
    "postinstall": "node -r @babel/register internals/scripts/CheckNativeDep.js && electron-builder install-app-deps && yarn build-dll && opencollective-postinstall",
    "prettier": "prettier --ignore-path .eslintignore --single-quote --write '**/*.{js,jsx,json,html,css,less,scss,yml}'",
    "postlint-fix": "prettier --ignore-path .eslintignore --single-quote --write '**/*.{js,jsx,json,html,css,less,scss,yml}'",
    "postlint-styles-fix": "prettier --ignore-path .eslintignore --single-quote --write '**/*.{css,scss}'",
    "preinstall": "node ./internals/scripts/CheckYarn.js",
    "prestart": "yarn build",
    "start": "cross-env NODE_ENV=production electron ./app/main.prod.js",
    "start-main-dev": "cross-env START_HOT=1 NODE_ENV=development electron -r @babel/register ./app/main.dev.js",
    "start-renderer-dev": "cross-env NODE_ENV=development node --max-old-space-size=2048 ./node_modules/.bin/webpack-dev-server --config configs/webpack.config.renderer.dev.babel.js",
    "test": "cross-env NODE_ENV=test BABEL_DISABLE_CACHE=1 jest",
    "test-all": "yarn lint && yarn build && yarn test && yarn build-e2e && yarn test-e2e",
    "test-e2e": "node -r @babel/register ./internals/scripts/CheckBuildsExist.js && cross-env NODE_ENV=test testcafe electron:./app ./test/e2e/LoginPage.e2e.js",
    "test-e2e-live": "node -r @babel/register ./internals/scripts/CheckBuildsExist.js && cross-env NODE_ENV=test testcafe --live electron:./app ./test/e2e/LoginPage.e2e.js",
    "test-watch": "yarn test --watch",
    "start-renderer-dev-win": "cross-env NODE_ENV=development node --max-old-space-size=2048 ./node_modules/webpack-dev-server/bin/webpack-dev-server.js --config configs/webpack.config.renderer.dev.babel.js",
    "dev-win": "cross-env START_HOT=1 node -r @babel/register ./internals/scripts/CheckPortInUse.js && cross-env START_HOT=1 yarn start-renderer-dev-win"
  },
  "lint-staged": {
    "*.{js,jsx}": [
      "cross-env NODE_ENV=development eslint --cache --format=pretty",
      "git add"
    ],
    "{*.json,.{babelrc,eslintrc,prettierrc,stylelintrc}}": [
      "prettier --ignore-path .eslintignore --parser json --write",
      "git add"
    ],
    "*.{css,scss}": [
      "prettier --ignore-path .eslintignore --single-quote --write",
      "git add"
    ],
    "*.{html,md,yml}": [
      "prettier --ignore-path .eslintignore --single-quote --write",
      "git add"
    ]
  },
  "build": {
    "productName": "HMISAPP",
    "appId": "com.cypresslawn.cl-hmis-app",
    "files": [
      "dist/",
      "node_modules/",
      "app.html",
      "main.prod.js",
      "main.prod.js.map",
      "package.json"
    ],
    "extraFiles": [
      {
        "from": ".env",
        "to": ".env"
      },
      {
        "from": ".env.development",
        "to": ".env.development"
      },
      {
        "from": ".env.dev",
        "to": ".env.dev"
      },
      {
        "from": ".env.qa",
        "to": ".env.qa"
      },
      {
        "from": ".env.uat",
        "to": ".env.uat"
      },
      {
        "from": ".env.preprod",
        "to": ".env.preprod"
      },
      {
        "from": ".env.production",
        "to": ".env.production"
      },
      {
        "from": "app/sqlite/migrations",
        "to": "app/sqlite/migrations"
      },
      {
        "from": "app/sqlite/models",
        "to": "app/sqlite/models"
      },
      {
        "from": "app/sqlite/seeders",
        "to": "app/sqlite/seeders"
      },
      {
        "from": "app/sqlite/sequelize",
        "to": "app/sqlite/sequelize"
      }
    ],
    "dmg": {
      "contents": [
        {
          "x": 130,
          "y": 220
        },
        {
          "x": 410,
          "y": 220,
          "type": "link",
          "path": "/Applications"
        }
      ]
    },
    "win": {
      "target": [
        "nsis",
        "msi"
      ]
    },
    "linux": {
      "target": [
        "deb",
        "rpm",
        "AppImage"
      ],
      "category": "Development"
    },
    "directories": {
      "buildResources": "resources",
      "output": "release"
    },
    "publish": {
      "provider": "github",
      "private": true,
      "owner": "APP_GH_OWNER",
      "repo": "APP_GH_REPO",
      "token": "APP_GH_TOKEN"
    },
    "nsis": {
      "deleteAppDataOnUninstall": true
    }
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/westagilelabs/clas-fe"
  },
  "author": {
    "name": "westagilelabs",
    "url": "https://www.westagilelabs.com"
  },
  "homepage": "https://www.cypresslawn.com",
  "jest": {
    "testURL": "http://localhost/",
    "moduleNameMapper": {
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/internals/mocks/fileMock.js",
      "\\.(css|less|sass|scss)$": "identity-obj-proxy"
    },
    "moduleFileExtensions": [
      "js",
      "jsx",
      "json"
    ],
    "moduleDirectories": [
      "node_modules",
      "app/node_modules"
    ],
    "transform": {
      "^.+\\.jsx?$": "babel-jest"
    },
    "setupFiles": [
      "./internals/scripts/CheckBuildsExist.js"
    ],
    "snapshotResolver": "./internals/scripts/SnapshotResolver.js",
    "collectCoverage": true
  },
  "devDependencies": {
    "@babel/core": "^7.7.5",
    "@babel/plugin-proposal-class-properties": "^7.7.4",
    "@babel/plugin-proposal-decorators": "^7.7.4",
    "@babel/plugin-proposal-do-expressions": "^7.7.4",
    "@babel/plugin-proposal-export-default-from": "^7.7.4",
    "@babel/plugin-proposal-export-namespace-from": "^7.7.4",
    "@babel/plugin-proposal-function-bind": "^7.7.4",
    "@babel/plugin-proposal-function-sent": "^7.7.4",
    "@babel/plugin-proposal-json-strings": "^7.7.4",
    "@babel/plugin-proposal-logical-assignment-operators": "^7.7.4",
    "@babel/plugin-proposal-nullish-coalescing-operator": "^7.7.4",
    "@babel/plugin-proposal-numeric-separator": "^7.7.4",
    "@babel/plugin-proposal-optional-chaining": "^7.7.5",
    "@babel/plugin-proposal-pipeline-operator": "^7.7.4",
    "@babel/plugin-proposal-throw-expressions": "^7.7.4",
    "@babel/plugin-syntax-dynamic-import": "^7.7.4",
    "@babel/plugin-syntax-import-meta": "^7.7.4",
    "@babel/plugin-transform-react-constant-elements": "^7.7.4",
    "@babel/plugin-transform-react-inline-elements": "^7.7.4",
    "@babel/preset-env": "^7.7.6",
    "@babel/preset-react": "^7.7.4",
    "@babel/register": "^7.7.4",
    "babel-core": "7.0.0-bridge.0",
    "babel-eslint": "^10.0.3",
    "babel-jest": "^24.9.0",
    "babel-loader": "^8.0.6",
    "babel-plugin-dev-expression": "^0.2.2",
    "babel-plugin-transform-react-remove-prop-types": "^0.4.24",
    "chalk": "^3.0.0",
    "concurrently": "^5.0.1",
    "cross-env": "^6.0.3",
    "cross-spawn": "^7.0.1",
    "css-loader": "^3.3.2",
    "detect-port": "^1.3.0",
    "dotenv": "^8.2.0",
    "electron": "7.1.11",
    "electron-builder": "^22.2.0",
    "electron-devtools-installer": "^2.2.4",
    "electron-rebuild": "^1.8.8",
    "enzyme": "^3.7.0",
    "enzyme-adapter-react-16": "^1.7.0",
    "enzyme-to-json": "^3.3.4",
    "eslint": "^6.7.2",
    "eslint-config-airbnb": "^18.0.1",
    "eslint-config-erb": "^0.1.1",
    "eslint-config-prettier": "^6.6.0",
    "eslint-formatter-pretty": "^3.0.0",
    "eslint-import-resolver-webpack": "^0.12.0",
    "eslint-plugin-compat": "^3.3.0",
    "eslint-plugin-flowtype": "^4.6.0",
    "eslint-plugin-import": "^2.19.1",
    "eslint-plugin-jest": "^23.1.1",
    "eslint-plugin-jsx-a11y": "6.2.3",
    "eslint-plugin-prettier": "^3.1.1",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-react": "^7.17.0",
    "eslint-plugin-react-hooks": "^4.0.2",
    "eslint-plugin-testcafe": "^0.2.1",
    "fbjs-scripts": "^1.2.0",
    "file-loader": "^5.0.2",
    "husky": "^3.1.0",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^24.9.0",
    "lint-staged": "^9.5.0",
    "mini-css-extract-plugin": "^0.8.0",
    "minimist": "^1.2.5",
    "node-sass": "^4.13.0",
    "opencollective-postinstall": "^2.0.2",
    "optimize-css-assets-webpack-plugin": "^5.0.3",
    "prettier": "^1.19.1",
    "react-test-renderer": "^16.12.0",
    "redux-logger": "^3.0.6",
    "rimraf": "^3.0.0",
    "sass-loader": "^8.0.0",
    "sinon": "^7.5.0",
    "spectron": "^9.0.0",
    "style-loader": "^1.0.1",
    "stylelint": "^12.0.0",
    "stylelint-config-prettier": "^8.0.0",
    "stylelint-config-standard": "^19.0.0",
    "terser-webpack-plugin": "^2.3.0",
    "testcafe": "^1.6.1",
    "testcafe-browser-provider-electron": "^0.0.13",
    "testcafe-react-selectors": "^3.3.0",
    "url-loader": "^3.0.0",
    "webpack": "^4.41.2",
    "webpack-bundle-analyzer": "^3.6.0",
    "webpack-cli": "^3.3.10",
    "webpack-dev-server": "^3.9.0",
    "webpack-merge": "^4.2.2",
    "yarn": "^1.21.1"
  },
  "dependencies": {
    "@hot-loader/react-dom": "^16.11.0",
    "axios": "^0.27.2",
    "bootstrap": "^4.4.1",
    "classnames": "^2.2.6",
    "connected-react-router": "^6.6.1",
    "core-js": "^3.5.0",
    "devtron": "^1.4.0",
    "electron-better-ipc": "^0.8.0",
    "electron-debug": "^3.0.1",
    "electron-log": "^4.0.0",
    "electron-updater": "^4.2.2",
    "flat": "^5.0.0",
    "formik": "^2.2.9",
    "history": "^4.10.1",
    "jquery": "^3.4.1",
    "lodash": "^4.17.15",
    "moment": "^2.24.0",
    "moment-timezone": "^0.5.31",
    "react": "^16.12.0",
    "react-dom": "^16.12.0",
    "react-flatpickr": "^3.10.12",
    "react-hot-loader": "^4.12.18",
    "react-icons": "^4.3.1",
    "react-notifications-component": "^2.3.0",
    "react-pdf": "^5.7.2",
    "react-redux": "^7.1.3",
    "react-router": "^5.1.2",
    "react-router-dom": "^5.1.2",
    "react-select": "^3.0.8",
    "react-stripe-elements": "^6.1.0",
    "react-use-async-hook": "^0.0.12",
    "reactstrap": "^8.2.0",
    "redux": "^4.0.4",
    "redux-thunk": "^2.3.0",
    "rollbar": "^2.19.4",
    "source-map-support": "^0.5.16",
    "validator": "^12.2.0",
    "yup": "^0.28.0"
  },
  "devEngines": {
    "node": ">=7.x",
    "npm": ">=4.x",
    "yarn": ">=0.21.3"
  },
  "browserslist": "electron 1.6"
}
